#define _CRT_SECURE_NO_WRNINGS
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;
int map[101][101];
int visit[101][101];
int dx[3] = { 0,0,-1 };
int dy[3] = { -1,1,0 };
int answer;
void dfs(int x, int y) {

	if (x == 0) {
		answer = y;
		return;
	}
	visit[x][y] = 1;

	for (int i = 0; i < 3; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];
		if (nx >= 0 && ny >= 0 && nx < 100 && ny < 100) {
			if (map[nx][ny] == 1 && visit[nx][ny] == 0) {
				dfs(nx, ny);
				return;
			}
		}
	}

}
int main(void) {

	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);

	int t;

	for (int tc = 1; tc <= 10; tc++) {
		cin >> t;
		for (int i = 0; i < 100; i++) {
			for (int j = 0; j < 100; j++) {
				cin >> map[i][j];
			}
		}

		for (int i = 0; i < 100; i++) {
			if (map[99][i] == 2) {
				dfs(99, i);
			}
		}
		cout << "#" << tc << " " << answer << endl;
		answer = 0;
		memset(visit,0,sizeof(visit));

	}

	return 0;
}

//먼저 도착점의 위치를 찾고 dfs를 좌,우,상 방향으로만 돌리고 세 방향 중 한 방향으로 가게되면 return으로 해당 dfs를 끝내버린다.
//틀렸다는건 무조건 내 코드에 문제가 있는 것이고 잘 못 생각한 것이기 때문에 끈기를 갖고 생각해보자.


