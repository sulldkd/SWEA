#define _CRT_SECURE_NO_WRNINGS
#include <iostream>
#include <algorithm>
#include <vector>
#include <cstring>

using namespace std;
int map[101][101];
int visit[101][101];
int dx[3] = { 0,0, 1};
int dy[3] = { -1,1, 0};
int cnt;
int answer;
int MIN = 9876543210;
vector<int> v;
void dfs(int x, int y) {
	
	if (x == 99) {
		
		cnt++;
		return;
	}

	visit[x][y] = 1;
	cnt++;
	for (int i = 0; i < 3; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];
		if (nx >= 0 && ny >= 0 && nx < 100 && ny < 100) {
			if (map[nx][ny] == 1 && visit[nx][ny] == 0) {
				dfs(nx, ny);
				return;
			}
		}
	}
}

int main(void) {

	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);

	int t;
	
	for (int tc = 1; tc <= 10; tc++) {
		cin >> t;

		for (int i = 0; i < 100; i++) {
			for (int j = 0; j < 100; j++) {
				cin >> map[i][j];
			}
		}

		for (int i = 0; i < 100; i++) {
			
			
				dfs(0, i);
				v.push_back(cnt);
				cnt= 0;
				memset(visit, 0, sizeof(visit));
			
		}
		
		for (int i = 0; i < v.size(); i++) {
			if (v[i] != 1) {
				MIN = min(MIN, v[i]);
			}
		}
		
		for (int i = 0; i < v.size(); i++) {
			if (MIN == v[i]) {
				answer = i;
				
			}
		}

		cout << "#" << tc << " " << answer << endl;
		v.clear();
		MIN = 9876543210;
		

	}

	return 0;
}


//처음에 0,i의 모든 시작점이 1이라 잘 못 생각해서 시간이 많이 걸렸다. 0,i의 값이 0인 부분은 계산할 필요가 없었다.
